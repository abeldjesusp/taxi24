// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Driver {
  id          Int      @id @default(autoincrement())
  name        String
  latitude    Float
  longitude   Float
  isAvailable Boolean  @default(true)
  createdAt   DateTime @default(now())
  journeys   Journey[]
}
model Rider {
  id          Int      @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  journeys   Journey[]
}
model Journey {
  id          Int      @id @default(autoincrement())
  driverId    Int
  riderId     Int
  pickupLocationLat Float
  pickupLocationLng Float
  dropoffLocationLat Float
  dropoffLocationLng Float
  status      String   @default("pending") // pending, active, completed, cancelled
  createdAt   DateTime @default(now())

  driver      Driver   @relation(fields: [driverId], references: [id])
  rider       Rider    @relation(fields: [riderId], references: [id])

  Invoice Invoice[]
}
model Invoice {
  id          Int      @id @default(autoincrement())
  journeyId   Int
  amount      Float
  status      String   @default("unpaid") // unpaid, paid, cancelled
  createdAt   DateTime @default(now())

  journey     Journey  @relation(fields: [journeyId], references: [id])
}